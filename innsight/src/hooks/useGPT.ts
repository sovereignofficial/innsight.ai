import { useMutation, useQueryClient } from "@tanstack/react-query"
import { createCabinsByAI, createGuestsByAI, createTemplateBookings } from "~/services/apiAI"
import { initiateToast } from "~/utils/helpers"
import { getGuests } from "~/services/apiGuests"
import { useErrorHandler } from "./useErrorHandler"
import { toastStates } from "~/types/toast.d"

export const useGPT = () =>{
    const queryClient = useQueryClient();
    const {handleError} = useErrorHandler();

    const createNewGuests = async () => {
        const guests = await getGuests();
        await createGuestsByAI(guests!);
     }
    const {mutate:createNewGuestsByAI,isPending:isTempGuestsLoading} = useMutation({
        mutationFn:createNewGuests,
        mutationKey:['create-guests-gpt'],
        onSuccess:()=>{
            initiateToast({state:toastStates.SUCCESS,'message':'New 10 guests have been created!'})
        },
        onError:(err)=>{handleError(err)}
    });

    const {mutate:createNewCabinsByAI,isPending:isAICabinsLoading} = useMutation({
        mutationFn:createCabinsByAI,
        mutationKey:['create-cabins-gpt'],
        onSuccess:()=>{
            queryClient.invalidateQueries();
            initiateToast({state:toastStates.SUCCESS,'message':'New 5 cabins have been created!'})
            initiateToast({state:toastStates.WARN, "message":"The cabin images have been temporarily generated by DALL-E for 2 hours. Please don't forget to update image URL's by yours within 2 hours."})
        },
        onError:(err)=>{handleError(err)}
    });

    const {mutate:createTempBookingsFn,isPending:isTempBookingsLoading} = useMutation({
        mutationKey:['create-temp-bookings'],
        mutationFn:createTemplateBookings,
        onSuccess:()=>{
            queryClient.invalidateQueries();
            initiateToast({state:toastStates.SUCCESS,'message':'New bookings have been created!'})
        },
        onError:(err)=>{handleError(err)}
    });

    return {
        createNewGuestsByAI,isTempGuestsLoading,
        createNewCabinsByAI,isAICabinsLoading,
        createTempBookingsFn,isTempBookingsLoading
    }
}
